version: v1
kind: Environment
name: my-env
type: primary | ephemeral
deployment:
  strategy:
    type: RollingUpdate
    maxUnavailable: 2 # optional, the default value is 25%
    maxSurge: 50% # optional, the default value is 25%
components:
  - kind: Service
    version: v1
    name: nginx
    gitRepo: git@...
    gitBranch: master
    gitApplicationPath: / # optional; for monorepo apps
    gitDockerComposePath: / # the path of the docker-compose.yaml inside the git_repo
    dockerCompose:
      build:
        context: .docker/nginx
        dockerfile: Dockerfile
        args:
          buildno: 1
    hosts: # you can add more
      - hostname: app # will be suffixed with -${env_unique}.bunnyenv.com
        path: / # optional
        servicePort: 8080
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps

  - kind: Database
    name: mysql
    gitRepo: git@...
    gitBranch: master
    gitApplicationPath: / # optional; for monorepo apps
    gitDockerComposePath: / # the path of the docker-compose.yaml inside the git_repo
    dockerCompose:
      build:
        context: .docker/mysql
        dockerfile: Dockerfile
        args:
          buildno: 1
    volumes:
      -
        name: db-data
        mount: /var/lib/mysql
        subPath: ''
    hosts:
volumes:
  - name: db-data
    size: 1Gi
    type: disk
dev:
  nginx:
    - containers:
        nginx:
          command: ['nginx']
          syncPaths:
            - remotePath: /var/www/
              localPath: ~/project
          portForwards:
            - "8080<8080"
          environment:
            WHEN_IN_DEV: '{{ env.vars.OTHER_VAR }}'
          resources:
              limits:
                  memory: 750M
              requests:
                  cpu: '0.15'
                  memory: 500M